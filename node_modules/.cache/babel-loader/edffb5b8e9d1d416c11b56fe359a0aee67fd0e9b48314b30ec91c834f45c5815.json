{"ast":null,"code":"var _jsxFileName = \"D:\\\\notus1\\\\notus-react\\\\src\\\\components\\\\Cards\\\\CardCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as dateFns from \"date-fns\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatOfDay = 'd';\nconst formatOfYear = 'yyyy';\nconst formatOfMonth = 'MMM';\nconst formatOfWeek = 'eee';\nconst CardCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  //const [selectedDate, setSelectedDate] = useState(null);\n  //  const [showForm, setShowForm] = useState(false);\n\n  const firstDay = dateFns.startOfMonth(currentDate);\n  const lastDay = dateFns.lastDayOfMonth(currentDate);\n  const startDate = dateFns.startOfWeek(currentDate);\n  const endDate = dateFns.lastDayOfWeek(currentDate);\n  const totalDate = dateFns.eachDayOfInterval({\n    start: startDate,\n    end: endDate\n  });\n  console.log(totalDate);\n  const weeks = (date => {\n    const weeks = [];\n    for (let day = 1; day <= 7; day++) {\n      weeks.push(dateFns.addDays(currentDate, day));\n    }\n    return weeks;\n  })(currentDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Month year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '1rem'\n      },\n      children: [weeks.map(week => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dateFns.format(week, formatOfWeek)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)), totalDate.map(date => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dateFns.format(date, formatOfDay)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CardCalendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CardCalendar;\nexport default CardCalendar;\nvar _c;\n$RefreshReg$(_c, \"CardCalendar\");","map":{"version":3,"names":["React","useState","dateFns","jsxDEV","_jsxDEV","formatOfDay","formatOfYear","formatOfMonth","formatOfWeek","CardCalendar","_s","currentDate","setCurrentDate","Date","firstDay","startOfMonth","lastDay","lastDayOfMonth","startDate","startOfWeek","endDate","lastDayOfWeek","totalDate","eachDayOfInterval","start","end","console","log","weeks","date","day","push","addDays","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","map","week","format","_c","$RefreshReg$"],"sources":["D:/notus1/notus-react/src/components/Cards/CardCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as dateFns from \"date-fns\"\r\nimport \"./Card.css\"\r\n\r\nconst formatOfDay = 'd';\r\nconst formatOfYear = 'yyyy';\r\nconst formatOfMonth = 'MMM';\r\nconst formatOfWeek = 'eee';\r\n\r\n\r\nconst CardCalendar = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    //const [selectedDate, setSelectedDate] = useState(null);\r\n  //  const [showForm, setShowForm] = useState(false);\r\n  \r\n    const firstDay = dateFns.startOfMonth(currentDate);\r\n    const lastDay = dateFns.lastDayOfMonth(currentDate);\r\n\r\n    const startDate = dateFns.startOfWeek(currentDate);\r\n    const endDate = dateFns.lastDayOfWeek(currentDate);\r\n    \r\n    const totalDate = dateFns.eachDayOfInterval({start: startDate , end: endDate});\r\n    \r\n    console.log(totalDate);\r\n\r\n    const weeks = (date => {\r\n        const weeks = [];\r\n        for (let day = 1 ; day <= 7 ; day++){\r\n            weeks.push(dateFns.addDays(currentDate, day));\r\n                }\r\n        return weeks;\r\n    })(currentDate);\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n        <div>Month year</div>\r\n        <div style={{display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', gap: '1rem'}}>\r\n            {weeks.map(week => (\r\n            <span>{dateFns.format(week,formatOfWeek)}</span>\r\n            ))}\r\n            \r\n            {totalDate.map(date => (\r\n            <span>{dateFns.format(date,formatOfDay)}</span>\r\n            ))}\r\n        </div>\r\n   \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default CardCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,OAAO,MAAM,UAAU;AACnC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,YAAY,GAAG,MAAM;AAC3B,MAAMC,aAAa,GAAG,KAAK;AAC3B,MAAMC,YAAY,GAAG,KAAK;AAG1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAC1D;EACF;;EAEE,MAAMC,QAAQ,GAAGZ,OAAO,CAACa,YAAY,CAACJ,WAAW,CAAC;EAClD,MAAMK,OAAO,GAAGd,OAAO,CAACe,cAAc,CAACN,WAAW,CAAC;EAEnD,MAAMO,SAAS,GAAGhB,OAAO,CAACiB,WAAW,CAACR,WAAW,CAAC;EAClD,MAAMS,OAAO,GAAGlB,OAAO,CAACmB,aAAa,CAACV,WAAW,CAAC;EAElD,MAAMW,SAAS,GAAGpB,OAAO,CAACqB,iBAAiB,CAAC;IAACC,KAAK,EAAEN,SAAS;IAAGO,GAAG,EAAEL;EAAO,CAAC,CAAC;EAE9EM,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EAEtB,MAAMM,KAAK,GAAG,CAACC,IAAI,IAAI;IACnB,MAAMD,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAGA,GAAG,IAAI,CAAC,EAAGA,GAAG,EAAE,EAAC;MAChCF,KAAK,CAACG,IAAI,CAAC7B,OAAO,CAAC8B,OAAO,CAACrB,WAAW,EAAEmB,GAAG,CAAC,CAAC;IACzC;IACR,OAAOF,KAAK;EAChB,CAAC,EAAEjB,WAAW,CAAC;EAQjB,oBACEP,OAAA;IAAK6B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACb9B,OAAA;MAAA8B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBlC,OAAA;MAAKmC,KAAK,EAAE;QAACC,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE,gBAAgB;QAAEC,GAAG,EAAE;MAAM,CAAE;MAAAR,QAAA,GAC7EN,KAAK,CAACe,GAAG,CAACC,IAAI,iBACfxC,OAAA;QAAA8B,QAAA,EAAOhC,OAAO,CAAC2C,MAAM,CAACD,IAAI,EAACpC,YAAY;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC9C,CAAC,EAEDhB,SAAS,CAACqB,GAAG,CAACd,IAAI,iBACnBzB,OAAA;QAAA8B,QAAA,EAAOhC,OAAO,CAAC2C,MAAM,CAAChB,IAAI,EAACxB,WAAW;MAAC;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAER,CAAC;AAAC5B,EAAA,CA5CID,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}