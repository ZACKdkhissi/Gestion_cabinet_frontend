{"ast":null,"code":"var _jsxFileName = \"D:\\\\notus1\\\\notus-react\\\\src\\\\components\\\\Cards\\\\CardCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as dateFns from \"date-fns\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatOfDay = 'd';\nconst formatOfYear = 'yyyy';\nconst formatOfMonth = 'MMM';\nconst formatOfWeek = 'eee';\nconst CardCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const firstDay = dateFns.startOfMonth(currentDate);\n  const lastDay = dateFns.lastDayOfMonth(currentDate);\n  const [showModal, setShowModal] = useState(false);\n  const startDate = dateFns.startOfWeek(firstDay, {\n    weekStartsOn: 1\n  });\n  const endDate = dateFns.endOfWeek(lastDay, {\n    weekStartsOn: 1\n  });\n  const totalDate = dateFns.eachDayOfInterval({\n    start: startDate,\n    end: endDate\n  });\n  const weeks = [];\n  for (let i = 0; i < totalDate.length; i += 7) {\n    weeks.push(totalDate.slice(i, i + 7));\n  }\n  const handlePreviousMonth = () => {\n    setCurrentDate(dateFns.subMonths(currentDate, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentDate(dateFns.addMonths(currentDate, 1));\n  };\n  const handleDayClick = () => {\n    setShowModal(true);\n  };\n  const isSameMonth = (date1, date2) => dateFns.isSameMonth(date1, date2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev-button\",\n        onClick: handlePreviousMonth,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"current-month\",\n        children: dateFns.format(currentDate, 'MMMM yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextMonth,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '1rem'\n      },\n      children: [weeks[0].map((date, dateIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dateFns.format(date, formatOfWeek)\n      }, dateIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), weeks.map((week, weekIndex) => week.map((date, dateIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleDayClick,\n        className: `calendar-day ${!isSameMonth(date, currentDate) ? 'other-month-day' : ''}`,\n        children: dateFns.format(date, formatOfDay)\n      }, dateIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(CardCalendar, \"YSUJQj8uKlRLYi8TbCgCaoPPjs0=\");\n_c = CardCalendar;\nexport default CardCalendar;\nvar _c;\n$RefreshReg$(_c, \"CardCalendar\");","map":{"version":3,"names":["React","useState","dateFns","jsxDEV","_jsxDEV","formatOfDay","formatOfYear","formatOfMonth","formatOfWeek","CardCalendar","_s","currentDate","setCurrentDate","Date","firstDay","startOfMonth","lastDay","lastDayOfMonth","showModal","setShowModal","startDate","startOfWeek","weekStartsOn","endDate","endOfWeek","totalDate","eachDayOfInterval","start","end","weeks","i","length","push","slice","handlePreviousMonth","subMonths","handleNextMonth","addMonths","handleDayClick","isSameMonth","date1","date2","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","format","style","display","gridTemplateColumns","gap","map","date","dateIndex","week","weekIndex","_c","$RefreshReg$"],"sources":["D:/notus1/notus-react/src/components/Cards/CardCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as dateFns from \"date-fns\";\r\nimport \"./Card.css\";\r\n\r\nconst formatOfDay = 'd';\r\nconst formatOfYear = 'yyyy';\r\nconst formatOfMonth = 'MMM';\r\nconst formatOfWeek = 'eee';\r\n\r\nconst CardCalendar = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const firstDay = dateFns.startOfMonth(currentDate);\r\n    const lastDay = dateFns.lastDayOfMonth(currentDate);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n\r\n    const startDate = dateFns.startOfWeek(firstDay, { weekStartsOn: 1 });\r\n    const endDate = dateFns.endOfWeek(lastDay, { weekStartsOn: 1 });\r\n\r\n    const totalDate = dateFns.eachDayOfInterval({ start: startDate, end: endDate });\r\n\r\n    const weeks = [];\r\n    for (let i = 0; i < totalDate.length; i += 7) {\r\n        weeks.push(totalDate.slice(i, i + 7));\r\n    }\r\n\r\n    const handlePreviousMonth = () => {\r\n        setCurrentDate(dateFns.subMonths(currentDate, 1));\r\n    };\r\n\r\n    const handleNextMonth = () => {\r\n        setCurrentDate(dateFns.addMonths(currentDate, 1));\r\n    };\r\n\r\n    const handleDayClick = () => {\r\n        setShowModal(true);\r\n      };\r\n      \r\n\r\n    const isSameMonth = (date1, date2) =>\r\n  dateFns.isSameMonth(date1, date2);\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"calendar-header\">\r\n                <button className=\"prev-button\" onClick={handlePreviousMonth}>Précédent</button>\r\n                <span className=\"current-month\">{dateFns.format(currentDate, 'MMMM yyyy')}</span>\r\n                <button className=\"next-button\" onClick={handleNextMonth}>Suivant</button>\r\n            </div>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', gap: '1rem' }}>\r\n                {weeks[0].map((date, dateIndex) => (\r\n                    <span  key={dateIndex}  >{dateFns.format(date, formatOfWeek)}</span>\r\n                ))}\r\n                {weeks.map((week, weekIndex) => (\r\n                    week.map((date, dateIndex) => (\r\n                        <span\r\n                        onClick={handleDayClick}\r\n                        key={dateIndex}\r\n                        className={`calendar-day ${\r\n                            !isSameMonth(date, currentDate) ? 'other-month-day' : ''\r\n                        }`}\r\n                        >\r\n                        {dateFns.format(date, formatOfDay)}\r\n                        </span>\r\n                    ))\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}