{"ast":null,"code":"var _jsxFileName = \"D:\\\\notus1\\\\notus-react\\\\src\\\\components\\\\Cards\\\\CardCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as dateFns from \"date-fns\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatOfDay = 'd';\nconst formatOfYear = 'yyyy';\nconst formatOfMonth = 'MMM';\nconst formatOfWeek = 'eee';\nconst CardCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const firstDay = dateFns.startOfMonth(currentDate);\n  const lastDay = dateFns.lastDayOfMonth(currentDate);\n  const startDate = dateFns.startOfWeek(firstDay);\n  const endDate = dateFns.endOfWeek(lastDay);\n  const weeks = dateFns.eachDayOfInterval({\n    start: startDate,\n    end: endDate\n  });\n  const daysOfMonth = [];\n  let day = startDate;\n  while (day <= endDate) {\n    daysOfMonth.push(day);\n    day = dateFns.addDays(day, 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Month year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '1rem'\n      },\n      children: weeks.map((week, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: dateFns.format(week, formatOfWeek)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), daysOfMonth.map((day, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: dateFns.format(day, formatOfDay)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CardCalendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CardCalendar;\nexport default CardCalendar;\nvar _c;\n$RefreshReg$(_c, \"CardCalendar\");","map":{"version":3,"names":["React","useState","dateFns","jsxDEV","_jsxDEV","formatOfDay","formatOfYear","formatOfMonth","formatOfWeek","CardCalendar","_s","currentDate","setCurrentDate","Date","firstDay","startOfMonth","lastDay","lastDayOfMonth","startDate","startOfWeek","endDate","endOfWeek","weeks","eachDayOfInterval","start","end","daysOfMonth","day","push","addDays","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","map","week","index","Fragment","format","idx","_c","$RefreshReg$"],"sources":["D:/notus1/notus-react/src/components/Cards/CardCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as dateFns from \"date-fns\";\r\nimport \"./Card.css\";\r\n\r\nconst formatOfDay = 'd';\r\nconst formatOfYear = 'yyyy';\r\nconst formatOfMonth = 'MMM';\r\nconst formatOfWeek = 'eee';\r\n\r\nconst CardCalendar = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const firstDay = dateFns.startOfMonth(currentDate);\r\n    const lastDay = dateFns.lastDayOfMonth(currentDate);\r\n\r\n    const startDate = dateFns.startOfWeek(firstDay);\r\n    const endDate = dateFns.endOfWeek(lastDay);\r\n\r\n    const weeks = dateFns.eachDayOfInterval({ start: startDate, end: endDate });\r\n\r\n    const daysOfMonth = [];\r\n    let day = startDate;\r\n    while (day <= endDate) {\r\n        daysOfMonth.push(day);\r\n        day = dateFns.addDays(day, 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div>Month year</div>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', gap: '1rem' }}>\r\n                {weeks.map((week, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <span>{dateFns.format(week, formatOfWeek)}</span>\r\n                        {daysOfMonth.map((day, idx) => (\r\n                            <span key={idx}>{dateFns.format(day, formatOfDay)}</span>\r\n                        ))}\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,OAAO,MAAM,UAAU;AACnC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,YAAY,GAAG,MAAM;AAC3B,MAAMC,aAAa,GAAG,KAAK;AAC3B,MAAMC,YAAY,GAAG,KAAK;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAMC,QAAQ,GAAGZ,OAAO,CAACa,YAAY,CAACJ,WAAW,CAAC;EAClD,MAAMK,OAAO,GAAGd,OAAO,CAACe,cAAc,CAACN,WAAW,CAAC;EAEnD,MAAMO,SAAS,GAAGhB,OAAO,CAACiB,WAAW,CAACL,QAAQ,CAAC;EAC/C,MAAMM,OAAO,GAAGlB,OAAO,CAACmB,SAAS,CAACL,OAAO,CAAC;EAE1C,MAAMM,KAAK,GAAGpB,OAAO,CAACqB,iBAAiB,CAAC;IAAEC,KAAK,EAAEN,SAAS;IAAEO,GAAG,EAAEL;EAAQ,CAAC,CAAC;EAE3E,MAAMM,WAAW,GAAG,EAAE;EACtB,IAAIC,GAAG,GAAGT,SAAS;EACnB,OAAOS,GAAG,IAAIP,OAAO,EAAE;IACnBM,WAAW,CAACE,IAAI,CAACD,GAAG,CAAC;IACrBA,GAAG,GAAGzB,OAAO,CAAC2B,OAAO,CAACF,GAAG,EAAE,CAAC,CAAC;EACjC;EAEA,oBACIvB,OAAA;IAAK0B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACb3B,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrB/B,OAAA;MAAKgC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE,gBAAgB;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAR,QAAA,EAC/ET,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBtC,OAAA,CAACJ,KAAK,CAAC2C,QAAQ;QAAAZ,QAAA,gBACX3B,OAAA;UAAA2B,QAAA,EAAO7B,OAAO,CAAC0C,MAAM,CAACH,IAAI,EAAEjC,YAAY;QAAC;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAChDT,WAAW,CAACc,GAAG,CAAC,CAACb,GAAG,EAAEkB,GAAG,kBACtBzC,OAAA;UAAA2B,QAAA,EAAiB7B,OAAO,CAAC0C,MAAM,CAACjB,GAAG,EAAEtB,WAAW;QAAC,GAAtCwC,GAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0C,CAC3D,CAAC;MAAA,GAJeO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CAhCID,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}