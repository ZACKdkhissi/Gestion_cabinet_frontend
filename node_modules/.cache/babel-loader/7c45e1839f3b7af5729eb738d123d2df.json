{"ast":null,"code":"var _jsxFileName = \"D:\\\\notus\\\\notus-react\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  token: null,\n  roles: [],\n  login: () => {},\n  logout: () => {}\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [roles, setRoles] = useState(JSON.parse(localStorage.getItem('roles')) || [] // Utilisez un tableau vide par défaut pour les rôles de l'utilisateur\n  );\n\n  const login = (newToken, userRoles) => {\n    setToken(newToken);\n    localStorage.setItem('token', newToken);\n  };\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    setRoles([]); // Efface les rôles de l'utilisateur\n    localStorage.removeItem('roles');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"WNiR1mjI1Zl1cgPcyy1TGtWoDoE=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","token","roles","login","logout","AuthProvider","children","_s","setToken","localStorage","getItem","setRoles","JSON","parse","newToken","userRoles","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/notus/notus-react/src/contexts/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n  token: null,\r\n  roles: [],\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [roles, setRoles] = useState(\r\n    JSON.parse(localStorage.getItem('roles')) || [] // Utilisez un tableau vide par défaut pour les rôles de l'utilisateur\r\n  );\r\n\r\n  \r\n\r\n  const login = (newToken,userRoles) => {\r\n    setToken(newToken);\r\n    localStorage.setItem('token', newToken);\r\n    \r\n    \r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    setRoles([]); // Efface les rôles de l'utilisateur\r\n    localStorage.removeItem('roles');\r\n   \r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EAChCK,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGX,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EACzE,MAAM,CAACR,KAAK,EAAES,QAAQ,CAAC,GAAGd,QAAQ,CAChCe,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;EAClD,CAAC;;EAID,MAAMP,KAAK,GAAGA,CAACW,QAAQ,EAACC,SAAS,KAAK;IACpCP,QAAQ,CAACM,QAAQ,CAAC;IAClBL,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;EAGzC,CAAC;EAED,MAAMV,MAAM,GAAGA,CAAA,KAAM;IACnBI,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdF,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EAElC,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAElB,KAAK;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAE,QAAA,EACnDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CA5BIF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA8BlB,SAASL,WAAW,EAAEK,YAAY;AAAG,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}