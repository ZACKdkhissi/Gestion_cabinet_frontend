{"ast":null,"code":"var _jsxFileName = \"D:\\\\notus1\\\\notus-react\\\\src\\\\components\\\\Cards\\\\CardCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { format, addDays, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const firstDayOfMonth = startOfMonth(currentDate);\n  const lastDayOfMonth = endOfMonth(currentDate);\n  const daysInMonth = eachDayOfInterval({\n    start: firstDayOfMonth,\n    end: lastDayOfMonth\n  });\n  const handlePrevMonth = () => {\n    setCurrentDate(addDays(firstDayOfMonth, -1)); // Change to your logic for previous month\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(addDays(lastDayOfMonth, 1)); // Change to your logic for next month\n  };\n\n  const handleDayClick = date => {\n    setSelectedDate(date);\n    setShowForm(true);\n  };\n  const handleCloseForm = () => {\n    setShowForm(false);\n  };\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    // Here, you can implement the logic to send the appointment details to the backend\n    console.log('Appointment details:', selectedDate, e.target.patientName.value);\n    setShowForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevMonth,\n        children: \"Previous Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(currentDate, 'MMMM yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        children: \"Next Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: daysInMonth.map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleDayClick(day),\n            children: format(day, 'd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"a_1\",\n      isOpen: showForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", selectedDate && format(selectedDate, 'dd MMMM yyyy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Patient Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"patientName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCloseForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CardCalendar, \"WnwfVg+xiKMba916AVlIeIQ/eRM=\");\n_c = CardCalendar;\nexport default CardCalendar;\nvar _c;\n$RefreshReg$(_c, \"CardCalendar\");","map":{"version":3,"names":["React","useState","format","addDays","startOfMonth","endOfMonth","eachDayOfInterval","Modal","jsxDEV","_jsxDEV","CardCalendar","_s","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","showForm","setShowForm","firstDayOfMonth","lastDayOfMonth","daysInMonth","start","end","handlePrevMonth","handleNextMonth","handleDayClick","date","handleCloseForm","handleSubmitForm","e","preventDefault","console","log","target","patientName","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","day","className","isOpen","onSubmit","type","name","_c","$RefreshReg$"],"sources":["D:/notus1/notus-react/src/components/Cards/CardCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { format, addDays, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nconst CardCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const firstDayOfMonth = startOfMonth(currentDate);\r\n  const lastDayOfMonth = endOfMonth(currentDate);\r\n  const daysInMonth = eachDayOfInterval({ start: firstDayOfMonth, end: lastDayOfMonth });\r\n\r\n  const handlePrevMonth = () => {\r\n    setCurrentDate(addDays(firstDayOfMonth, -1)); // Change to your logic for previous month\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentDate(addDays(lastDayOfMonth, 1)); // Change to your logic for next month\r\n  };\r\n\r\n  const handleDayClick = (date) => {\r\n    setSelectedDate(date);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    // Here, you can implement the logic to send the appointment details to the backend\r\n    console.log('Appointment details:', selectedDate, e.target.patientName.value);\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={handlePrevMonth}>Previous Month</button>\r\n        <span>{format(currentDate, 'MMMM yyyy')}</span>\r\n        <button onClick={handleNextMonth}>Next Month</button>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Sun</th>\r\n            <th>Mon</th>\r\n            <th>Tue</th>\r\n            <th>Wed</th>\r\n            <th>Thu</th>\r\n            <th>Fri</th>\r\n            <th>Sat</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {daysInMonth.map((day) => (\r\n            <tr key={day}>\r\n              <td onClick={() => handleDayClick(day)}>{format(day, 'd')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Modal className=\"a_1\" isOpen={showForm}>\r\n        <h2>Add Appointment</h2>\r\n        <p>Date: {selectedDate && format(selectedDate, 'dd MMMM yyyy')}</p>\r\n        <form onSubmit={handleSubmitForm}>\r\n          <label>\r\n            Patient Name:\r\n            <input type=\"text\" name=\"patientName\" />\r\n          </label>\r\n          <button type=\"submit\">Add</button>\r\n          <button type=\"button\" onClick={handleCloseForm}>Cancel</button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}