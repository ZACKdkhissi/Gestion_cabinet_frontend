{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Gestion_cabinet_frontend\\\\src\\\\components\\\\Cards\\\\CardPatients.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createApiInstance from \"api/api\";\nimport { AuthContext } from \"contexts/AuthContext\";\nimport CardAddPatient from \"./CardAddPatient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardPatients({\n  color\n}) {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [isAddPatientOpen, setIsAddPatientOpen] = useState(false);\n  const apiInstance = createApiInstance(token);\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n    apiInstance.get(\"api/patients\").then(response => {\n      setPatients(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [apiInstance, token]);\n  useEffect(() => {\n    setFilteredPatients(patients);\n  }, [patients]);\n  useEffect(() => {\n    const query = searchQuery.toLowerCase();\n    const filtered = patients.filter(patient => {\n      const {\n        cin,\n        nom,\n        prenom\n      } = patient;\n      return cin.toLowerCase().includes(query) || nom.toLowerCase().includes(query) || prenom.toLowerCase().includes(query);\n    });\n    setFilteredPatients(filtered);\n  }, [searchQuery, patients]);\n  const handleDeletePatient = patientId => {\n    const confirmDelete = window.confirm(\"Êtes-vous sûr de vouloir supprimer ce patient ?\");\n    if (confirmDelete) {\n      apiInstance.delete(`/api/patients/${patientId}`).then(response => {\n        console.log(\"Patient deleted successfully:\", response.data);\n        setFilteredPatients(prevPatients => prevPatients.filter(patient => patient.id_patient !== patientId));\n      }).catch(error => {\n        console.error(\"Error deleting patient:\", error);\n      });\n    }\n  };\n  const handleOpenAddPatient = () => {\n    setIsAddPatientOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAddPatientOpen ? /*#__PURE__*/_jsxDEV(CardAddPatient, {\n      onClose: () => setIsAddPatientOpen(false),\n      onAddSuccess: () => setPatients([]) // Empty the patient list to trigger the useEffect fetching data again\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" + (color === \"light\" ? \"bg-white\" : \"bg-lightBlue-900 text-white\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(CardPatients, \"mzHF4Twi9N1CjSGSLGdnJjfp31Q=\");\n_c = CardPatients;\nCardPatients.defaultProps = {\n  color: \"light\"\n};\nCardPatients.propTypes = {\n  color: PropTypes.oneOf([\"light\", \"dark\"])\n};\nvar _c;\n$RefreshReg$(_c, \"CardPatients\");","map":{"version":3,"names":["React","useState","useEffect","useContext","PropTypes","createApiInstance","AuthContext","CardAddPatient","jsxDEV","_jsxDEV","CardPatients","color","_s","token","searchQuery","setSearchQuery","patients","setPatients","filteredPatients","setFilteredPatients","isAddPatientOpen","setIsAddPatientOpen","apiInstance","get","then","response","data","catch","error","console","query","toLowerCase","filtered","filter","patient","cin","nom","prenom","includes","handleDeletePatient","patientId","confirmDelete","window","confirm","delete","log","prevPatients","id_patient","handleOpenAddPatient","children","onClose","onAddSuccess","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","defaultProps","propTypes","oneOf","$RefreshReg$"],"sources":["D:/Projects/Gestion_cabinet_frontend/src/components/Cards/CardPatients.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport createApiInstance from \"api/api\";\r\nimport { AuthContext } from \"contexts/AuthContext\";\r\nimport CardAddPatient from \"./CardAddPatient\";\r\n\r\nexport default function CardPatients({ color }) {\r\n  const { token } = useContext(AuthContext);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [patients, setPatients] = useState([]);\r\n  const [filteredPatients, setFilteredPatients] = useState([]);\r\n  const [isAddPatientOpen, setIsAddPatientOpen] = useState(false);\r\n  const apiInstance = createApiInstance(token);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return;\r\n    }\r\n\r\n    apiInstance\r\n      .get(\"api/patients\")\r\n      .then((response) => {\r\n        setPatients(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [apiInstance, token]);\r\n\r\n  useEffect(() => {\r\n    setFilteredPatients(patients);\r\n  }, [patients]);\r\n\r\n  useEffect(() => {\r\n    const query = searchQuery.toLowerCase();\r\n    const filtered = patients.filter((patient) => {\r\n      const { cin, nom, prenom } = patient;\r\n      return (\r\n        cin.toLowerCase().includes(query) ||\r\n        nom.toLowerCase().includes(query) ||\r\n        prenom.toLowerCase().includes(query)\r\n      );\r\n    });\r\n    setFilteredPatients(filtered);\r\n  }, [searchQuery, patients]);\r\n\r\n  const handleDeletePatient = (patientId) => {\r\n    const confirmDelete = window.confirm(\r\n      \"Êtes-vous sûr de vouloir supprimer ce patient ?\"\r\n    );\r\n    if (confirmDelete) {\r\n      apiInstance\r\n        .delete(`/api/patients/${patientId}`)\r\n        .then((response) => {\r\n          console.log(\"Patient deleted successfully:\", response.data);\r\n          setFilteredPatients((prevPatients) =>\r\n            prevPatients.filter((patient) => patient.id_patient !== patientId)\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting patient:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleOpenAddPatient = () => {\r\n    setIsAddPatientOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isAddPatientOpen ? (\r\n        <CardAddPatient\r\n          onClose={() => setIsAddPatientOpen(false)}\r\n          onAddSuccess={() => setPatients([])} // Empty the patient list to trigger the useEffect fetching data again\r\n        />\r\n      ) : (\r\n        <div\r\n          className={\r\n            \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" +\r\n            (color === \"light\" ? \"bg-white\" : \"bg-lightBlue-900 text-white\")\r\n          }\r\n        >\r\n          {/* ... The rest of the component remains the same ... */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardPatients.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nCardPatients.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}