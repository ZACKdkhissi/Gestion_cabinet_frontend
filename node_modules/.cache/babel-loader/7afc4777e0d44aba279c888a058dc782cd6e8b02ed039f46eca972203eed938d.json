{"ast":null,"code":"var _jsxFileName = \"D:\\\\notus1\\\\notus-react\\\\src\\\\components\\\\Cards\\\\CardCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as dateFns from \"date-fns\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatOfDay = 'd';\nconst formatOfYear = 'yyyy';\nconst formatOfMonth = 'MMM';\nconst formatOfWeek = 'eee';\nconst CardCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const firstDay = dateFns.startOfMonth(currentDate);\n  const lastDay = dateFns.lastDayOfMonth(currentDate);\n  const startDate = dateFns.startOfWeek(firstDay);\n  const endDate = dateFns.endOfWeek(lastDay);\n  const totalDate = dateFns.eachDayOfInterval({\n    start: startDate,\n    end: endDate\n  });\n  const weeks = [];\n  for (let i = 0; i < totalDate.length; i += 7) {\n    weeks.push(totalDate.slice(i, i + 7));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: dateFns.format(currentDate, 'MMMM yyyy')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '1rem'\n      },\n      children: weeks.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: week.map((date, dateIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: dateFns.format(date, formatOfDay)\n        }, dateIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this))\n      }, weekIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(CardCalendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CardCalendar;\nexport default CardCalendar;\nvar _c;\n$RefreshReg$(_c, \"CardCalendar\");","map":{"version":3,"names":["React","useState","dateFns","jsxDEV","_jsxDEV","formatOfDay","formatOfYear","formatOfMonth","formatOfWeek","CardCalendar","_s","currentDate","setCurrentDate","Date","firstDay","startOfMonth","lastDay","lastDayOfMonth","startDate","startOfWeek","endDate","endOfWeek","totalDate","eachDayOfInterval","start","end","weeks","i","length","push","slice","className","children","format","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","map","week","weekIndex","Fragment","date","dateIndex","_c","$RefreshReg$"],"sources":["D:/notus1/notus-react/src/components/Cards/CardCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as dateFns from \"date-fns\";\r\nimport \"./Card.css\";\r\n\r\nconst formatOfDay = 'd';\r\nconst formatOfYear = 'yyyy';\r\nconst formatOfMonth = 'MMM';\r\nconst formatOfWeek = 'eee';\r\n\r\nconst CardCalendar = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const firstDay = dateFns.startOfMonth(currentDate);\r\n    const lastDay = dateFns.lastDayOfMonth(currentDate);\r\n\r\n    const startDate = dateFns.startOfWeek(firstDay);\r\n    const endDate = dateFns.endOfWeek(lastDay);\r\n\r\n    const totalDate = dateFns.eachDayOfInterval({ start: startDate, end: endDate });\r\n\r\n    const weeks = [];\r\n    for (let i = 0; i < totalDate.length; i += 7) {\r\n        weeks.push(totalDate.slice(i, i + 7));\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div>{dateFns.format(currentDate, 'MMMM yyyy')}</div>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', gap: '1rem' }}>\r\n                {weeks.map((week, weekIndex) => (\r\n                    <React.Fragment key={weekIndex}>\r\n                        {week.map((date, dateIndex) => (\r\n                            <span key={dateIndex}>{dateFns.format(date, formatOfDay)}</span>\r\n                        ))}\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,OAAO,MAAM,UAAU;AACnC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,YAAY,GAAG,MAAM;AAC3B,MAAMC,aAAa,GAAG,KAAK;AAC3B,MAAMC,YAAY,GAAG,KAAK;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAMC,QAAQ,GAAGZ,OAAO,CAACa,YAAY,CAACJ,WAAW,CAAC;EAClD,MAAMK,OAAO,GAAGd,OAAO,CAACe,cAAc,CAACN,WAAW,CAAC;EAEnD,MAAMO,SAAS,GAAGhB,OAAO,CAACiB,WAAW,CAACL,QAAQ,CAAC;EAC/C,MAAMM,OAAO,GAAGlB,OAAO,CAACmB,SAAS,CAACL,OAAO,CAAC;EAE1C,MAAMM,SAAS,GAAGpB,OAAO,CAACqB,iBAAiB,CAAC;IAAEC,KAAK,EAAEN,SAAS;IAAEO,GAAG,EAAEL;EAAQ,CAAC,CAAC;EAE/E,MAAMM,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACM,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC1CD,KAAK,CAACG,IAAI,CAACP,SAAS,CAACQ,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC;EAEA,oBACIvB,OAAA;IAAK2B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACb5B,OAAA;MAAA4B,QAAA,EAAM9B,OAAO,CAAC+B,MAAM,CAACtB,WAAW,EAAE,WAAW;IAAC;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDjC,OAAA;MAAKkC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE,gBAAgB;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAT,QAAA,EAC/EN,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,SAAS,kBACvBxC,OAAA,CAACJ,KAAK,CAAC6C,QAAQ;QAAAb,QAAA,EACVW,IAAI,CAACD,GAAG,CAAC,CAACI,IAAI,EAAEC,SAAS,kBACtB3C,OAAA;UAAA4B,QAAA,EAAuB9B,OAAO,CAAC+B,MAAM,CAACa,IAAI,EAAEzC,WAAW;QAAC,GAA7C0C,SAAS;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2C,CAClE;MAAC,GAHeO,SAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA7BID,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}